plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
//    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "fr.rnbe.android.core"
        minSdk 21
        targetSdk 32
        versionCode 1//rootProject.versionCode as Integer
        versionName "1.0" //rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    api "androidx.core:core-ktx:$androidXCoreVersion"
    api "androidx.security:security-crypto:1.1.0-alpha03"

    /*used for recycler pager indicator*/
    api 'com.andkulikov:transitionseverywhere:1.8.0'
    api "androidx.preference:preference-ktx:1.2.0"
//    api "com.google.android.material:material:$materialVersion"
    api "androidx.gridlayout:gridlayout:1.0.0"

    //Firebase
    api platform('com.google.firebase:firebase-bom:28.4.1')
    api 'com.google.firebase:firebase-core'
    api 'com.google.firebase:firebase-auth-ktx'
    api 'com.google.firebase:firebase-database-ktx'
    api 'com.google.firebase:firebase-analytics-ktx'
    api 'com.google.firebase:firebase-appindexing'
    api 'com.google.firebase:firebase-perf-ktx'
    api 'com.google.firebase:firebase-crashlytics-ktx'
    api 'com.google.firebase:firebase-crashlytics-ndk'
    api 'com.google.firebase:firebase-config-ktx'

    //Airship
//    api "com.urbanairship.android:urbanairship-fcm:$airshipVersion"
//    api "com.urbanairship.android:urbanairship-adm:$airshipVersion"

    //Google Play Services
    api "com.google.android.gms:play-services-base:$playServiceBaseVersion"
    api "com.google.android.gms:play-services-basement:$playServiceBasementVersion"
    api "com.google.android.gms:play-services-gcm:$playServiceGcmVersion"
    api "com.google.android.gms:play-services-location:$playServiceLocationVersion"
    api "com.google.android.gms:play-services-maps:$playServiceVersion"
    api "com.google.android.gms:play-services-safetynet:$playServiceVersion"
    api "com.google.android.gms:play-services-vision:$playServiceVisionVersion"
    api "com.google.android.gms:play-services-tagmanager:$playServiceVersion"

    //EventBus
    api "org.greenrobot:eventbus:$greenRobotVersion"

    // RxJava & RxBinding
    api "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    api "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    api "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    api "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"
    api "com.squareup.retrofit2:adapter-rxjava:$retrofit2Version"

    //Joda time
    api "joda-time:joda-time:$jodaVersion"
    api "com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:$jodatimeSerialiserVersion"

    // Xzing to generate barcode
    api "com.google.zxing:core:$zxingVersion"

    //Gson
    api "com.google.code.gson:gson:$gsonVersion"

    //TagCommander
    api "com.tagcommander.lib:core:$tagCommanderCoreVersion"
    api "com.tagcommander.lib:SDK:$tagCommanderSdkVersion"
    api "com.tagcommander.lib:segment:$tagCommanderSegmentVersion"

    //Permission
    api "pub.devrel:easypermissions:$easyPermissionsVersion"
    api "com.github.tbruyelle:rxpermissions:$rxPermissionsVersion"

    //Flexbox
    api "com.google.android:flexbox:$flexboxVersion"

    api "com.ethanhua:skeleton:$skeletonVersion"
    api "io.supercharge:shimmerlayout:$shimmerLayoutVersion"

    //Lottie
    api "com.airbnb.android:lottie:$lottieVersion"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // JUnit Tests
    testImplementation "junit:junit:$jUnit"
    testImplementation "pl.pragmatists:JUnitParams:$pragmatistsVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlin"
    testImplementation "org.powermock:powermock-api-mockito:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule-agent:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powermockVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"

    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "androidx.test:runner:$testCoreVersion"
    testImplementation "androidx.test.ext:junit:$androidTestJUnitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}